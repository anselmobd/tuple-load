[read]
db=pccon
sql=
  SELECT
    sum(coalesce(iea.saldo,0)) saldo
  , ip.CodItemProd
  , SUBSTRING(ip.CodItemProd, 1, 2) iniCod
  , ip.CodEspecie
  , ip.DescrItemDeProducao
  , ip.Complemento
  , ip.CodColecao
  , ip.DataDeAtualizacao
  , ip.UnidMedida
  FROM TAB_ItemDeProducao ip
  LEFT JOIN TAB_ItemDeEstoqueAlmoxarifado iea
    on iea.CodItemProd = ip.CodItemProd
       and iea.saldo > 0
  WHERE ip.CodItemProd NOT LIKE 'DV%'
    and ip.CodItemProd NOT LIKE 'PA%'
    and ip.CodItemProd NOT LIKE 'MD%'
    and ip.CodItemProd NOT LIKE 'MA0%'
    and ip.CodItemProd NOT LIKE 'TC%'
    and ip.CodTipoDeMaterial = 200
    and ip.NivelTopologico = 4
    and REPLACE(REPLACE(ip.DescrItemDeProducao, '-', ''), ' ', '') <> ''
    -- filtro para teste
    -- and ip.CodItemProd = 'CX00800'
    -- filtro para nivel de estrutura = '9'

  GROUP BY
    ip.CodItemProd
  , ip.CodEspecie
  , ip.DescrItemDeProducao
  , ip.Complemento
  , ip.CodColecao
  , ip.DataDeAtualizacao
  , ip.UnidMedida
  HAVING
    sum(iea.saldo) >= 100
    or datediff(d, max(ip.DataDeAtualizacao), '2016-06-01T00:00:00') < 0
  ORDER BY
    ip.CodItemProd;

[functions]
sequence={"count": {"break": "inicod", "start": "2"}}
conta_estoque={"translate":
  { "select": "conta_de_estoque"
  , "type": "n"
  , "default": "0"
  , "from": "especie-conta_de_estoque.csv"
  , "where": [["especie", "codespecie"]]
  }}

[variables]
nivel_estrutura={"value": "9"}
codigo_contabil={"value": "99"}

[columns]
nivel_estrutura=t
referencia=t,{"format": "%s%03d", "fields": ["inicod", "sequence"]}
descritemdeproducao=t
unidmedida=t
conta_estoque=n,{"format": "%d"}
codigo_contabil=n,{"format": "%s"}
